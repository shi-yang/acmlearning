/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */


#include <bits/stdc++.h>
using namespace std;
const int N = (int) 1e6 + 5;
int a[N], dp[N];
class TaskE {
public:
	void solve(std::istream& in, std::ostream& out) {
		int n;
		in >> n;
		for (int i = 0; i < n; i++) {
			in >> a[i];
		}
		for (int i = 0; i < n; i++) {
			if (dp[i])
				continue;
			for (int j = i + 1; j < n; j++) {
				if ((a[i] & a[j]) == 0) {
					dp[i] = a[j];
					dp[j] = a[i];
				}
			}
		}
		for (int i = 0; i < n; i++) {
			if (dp[i])
				out << dp[i] << ' ';
			else
				out << -1 << ' ';
		}
	}
};


int main() {
	std::cin.tie(0);
	std::ios::sync_with_stdio(false);
	TaskE solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
